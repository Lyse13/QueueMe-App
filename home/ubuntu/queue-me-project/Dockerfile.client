# Dockerfile.client

# Use a Node.js image as the base for building the React app
FROM node:20-alpine as build

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock) to install dependencies
COPY queue-me-project/queue-me/client/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the React app source code
COPY queue-me-project/queue-me/client/ ./

# Build the React app for production
RUN npm run build

# Use a lightweight Nginx image to serve the static files
FROM nginx:stable-alpine

# Copy the built React app from the build stage to Nginx's public directory
COPY --from=build /app/build /usr/share/nginx/html

# Expose port 80 for the Nginx server
EXPOSE 80

# Start Nginx when the container launches
CMD ["nginx", "-g", "daemon off;"]

